syntax = "proto3";

// Note: all monetary values are passed as strings, to avoid rounding errors.
// They are interpreted as decimals on both sides.

import "google/protobuf/timestamp.proto";

import "protobufs/messages/common.proto";

service Moniek {
    // FinGetAccount returns the balance sheet for one account, including all
    // transactions.
    rpc FinGetAccount(FinGetAccountReq) returns (FinGetAccountResp) {};

    // FinGetDebitors returns a list of users that are in depth. This is used
    // for sending reminder messages, for example.
    rpc FinGetDebitors(Empty) returns (FinDebitors) {};

    // FinCheckNames checks whether the names (users, committees) in the website
    // match up with what is in the financial administration. It returns a list
    // of missing names on both sides.
    rpc FinCheckNames(FinNamesList) returns (FinMissingNames) {};

    // FinGetGnuCashObject returns an opaque blob that contains a
    // msgpack-serialized buffer of the GnuCash object(s) with the given path.
    rpc FinGetGnuCashObject(FinObjectRequest) returns (FinObject) {};

    // FinGetYears returns a map where the keys are the currently tracked years
    // and the values are the YAML files that contains some information about
    // how the financial administration was handled that year.
    rpc FinGetYears(Empty) returns (FinYears) {};

    // FinGetErrors returns a list of errors and other questionable things in
    // the financial administration of the given year.
    rpc FinGetErrors(FinYear) returns (FinErrors) {};
}

message FinGetAccountReq {
    string name = 1;
    string fullName = 2;
    string accountType = 3;
}

message FinGetAccountResp {
    repeated FinTransaction transactions = 1;
    map<string, bool> accounts = 2;
    string total = 3;
    sint64 mtime = 4;
}

message FinTransaction {
    google.protobuf.Timestamp date = 1;
    string description = 2;
    repeated FinMutation mutations = 3;
    string num = 4;
    string sum = 5;
    string value = 6;
}

message FinMutation {
    string account = 1;
    bool counts = 2;
    string memo = 3;
    string sum = 4;
    string value = 5;
}

// FinDebitors is a list of people who are in dept to Karpe Noktem.
message FinDebitors {
    repeated FinDebitor debitors = 1;
}

// FinDebitor is one person who is in dept to Karpe Noktem.
message FinDebitor {
    string name = 1;
    string debt = 2;
}

// FinNamesList is a list of names of users and groups, and is used to check
// whether the names in the financial administration and in the website match.
message FinNamesList {
    repeated string user = 1;
    repeated string group = 2;
}

// FinMissingNames has a list of names that are missing in the GnuCash database
// or in the website database.
message FinMissingNames {
    FinNamesList gnucash = 1;
    FinNamesList website = 2;
}

// FinObjectRequest contains enough information to look up a single object in
// GnuCash.
message FinObjectRequest {
    sint32 year = 1;
    string handle = 2;
}

// FinObject is a single GnuCash object, encoded using msgpack.
message FinObject {
    // Note: we should probably serialize/deserialize these objects properly,
    // but that requires many more changes to the code. Serializing as a binary
    // msgpack blob now for simplicity.
    bytes msgpack = 1;
}

message FinCheck {
    string type = 1;
    string name = 2;
    string description = 3;
}

// FinYears contains a mapping from year numbers to the file that describes the
// financial administration that year.
message FinYears {
    map<sint32, string> years = 1;
}

message FinYear {
    sint32 year = 1;
}

// FinErrors contains a list of autogenerated errors, warnings, and remarks
// about the financial administration of a given year (autokasco).
message FinErrors {
    repeated FinError errors = 1;
}

// FinError is a single error or warning that is found in the financial
// administration.
message FinError {
    FinCheck check = 1;
    repeated string objects = 2;
}
